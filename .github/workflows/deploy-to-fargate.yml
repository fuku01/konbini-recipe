name: Deploy to AWS Fargate

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker
        uses: docker/setup-qemu-action@v1

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build Docker image
        run: |
          docker build -t ${{ steps.login-ecr.outputs.registry }}/konbini-recipe-ecr -f Dockerfile .

      - name: Run tests
        run: |
          docker run --rm -e MYSQL_USER -e MYSQL_PASSWORD -e MYSQL_DATABASE -e MYSQL_DATABASE_TEST -e MYSQL_PORT -e MYSQL_HOST
          ${{ steps.login-ecr.outputs.registry }}/konbini-recipe-ecr:latest bundle exec rspec
        env:
          MYSQL_USER: ${{ secrets.MYSQL_USER }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
          MYSQL_DATABASE_TEST: ${{ secrets.MYSQL_DATABASE_TEST }}
          MYSQL_PORT: ${{ secrets.MYSQL_PORT }}
          MYSQL_HOST: ${{ secrets.MYSQL_HOST }}

      - name: Push Docker image
        run: |
          docker push ${{ steps.login-ecr.outputs.registry }}/konbini-recipe-ecr:latest

      - name: Deploy to Amazon ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: task-definition.json
          service: konbini-recipe-service-4
          cluster: konbini-recipe-cluster
          container: api
          image: ${{ steps.login-ecr.outputs.registry }}/konbini-recipe-ecr:latest
